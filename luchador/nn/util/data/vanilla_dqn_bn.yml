typename: Sequential
args:
  input_config:
    typename: Input
    args:
      dtype: uint8
      shape: {input_shape}
      name: state
  layer_configs:
    - scope: layer0/preprocessing
      typename: TrueDiv
      args:
        denom: 255
    - scope: layer1/conv2D
      typename: Conv2D
      args:
        n_filters: 32
        filter_width: 8
        filter_height: 8
        strides: 4
        padding: valid
        with_bias: False
    - scope: layer1/BN
      typename: BatchNormalization
      args:
        learn: True
        decay: 0.999
    - scope: layer1/ReLU
      typename: ReLU
    - scope: layer2/conv2D
      typename: Conv2D
      args:
        n_filters: 64
        filter_width: 4
        filter_height: 4
        strides: 2
        padding: valid
        with_bias: False
    - scope: layer2/BN
      typename: BatchNormalization
      args:
        learn: True
        decay: 0.999
    - scope: layer2/ReLU
      typename: ReLU
    - scope: layer3/conv2D
      typename: Conv2D
      args:
        filter_width: 3
        filter_height: 3
        n_filters: 64
        strides: 1
        padding: valid
        with_bias: False
    - scope: layer3/BN
      typename: BatchNormalization
      args:
        learn: True
        decay: 0.999
    - scope: layer3/ReLU
      typename: ReLU
    - scope: layer4/flatten
      typename: Flatten
    - scope: layer5/dense
      typename: Dense
      args:
        n_nodes: 512
        with_bias: False
    - scope: layer5/BN
      typename: BatchNormalization
      args:
        learn: True
        decay: 0.999
    - scope: layer5/ReLU
      typename: ReLU
    - scope: layer6/dense
      typename: Dense
      args:
        n_nodes: {n_actions}
