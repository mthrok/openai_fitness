encoder: &encoder
  typename: Sequential
  args:
    name: encoder
    input_config:
      typename: Input
      reuse: True
      name: input_image
    layer_configs:
      - typename: Conv2D
        args: &conv2d_1
          n_filters: 32
          filter_width: 5
          filter_height: 5
          strides: 2
          padding: valid
          name: layer1/conv2D
      - typename: ReLU
        args:
          name: layer1/ReLU
      #====================
      - typename: BatchNormalization
        args:
          name: layer2/BN
      #====================
      - typename: Conv2D
        args: &conv2d_2
          n_filters: 64
          filter_width: 3
          filter_height: 3
          strides: 2
          padding: valid
          name: layer3/conv2D
      - typename: ReLU
        args:
          name: layer3/ReLU
      #====================
      - typename: BatchNormalization
        args:
          name: layer4/BN

noise: &noise
  typename: Sequential
  args:
    name: noise
    input_config:
      typename: Model
      name: encoder
      fetch: output
    layer_configs:
      - typename: Anonymous
        args:
          exp: x + NormalRandom()
          name: layer5/noise

decoder: &decoder
  typename: Sequential
  args:
    name: decoder
    input_config:
      typename: Model
      name: noise
      fetch: output
    layer_configs:
      - typename: Conv2DTranspose
        args:
          << : *conv2d_2
          name: layer6/conv2DTranspose
        parameters:
          original_filter:
            typename: Variable
            name: layer3/conv2D/filter
          original_input:
            typename: Tensor
            name: layer2/BN/output
      - typename: ReLU
        args:
          name: layer6/ReLU
      #====================
      - typename: BatchNormalization
        args:
          name: layer7/BN
      #====================
      - typename: Conv2DTranspose
        args:
          << : *conv2d_1
          name: layer8/conv2DTranspose
        parameters:
          original_filter:
            typename: Variable
            name: layer1/conv2D/filter
          original_input:
            typename: Input
            reuse: True
            name: input_image
      - typename: ReLU
        args:
          name: layer8/ReLU

autoencoder: &autoencoder
  typename: Container
  args:
    input_config:
      typename: Input
      reuse: True
      name: input_image
    model_configs:
      - << : *encoder
        name: encoder
      - << : *noise
        name: noise
      - << : *decoder
        name: decoder

error: &error
  typename: Graph
  args:
    name: error
    node_configs:
      - typename: SSE
        args:
          name: reconstruction_error
        input:
          target:
            typename: Input
            reuse: True
            name: input_image
          prediction:
            typename: Model
            name: decoder
            fetch: output
    output_config:
      typename: Tensor
      name: reconstruction_error/output

typename: Container
args:
  input_config:
    typename: Input
    args:
      name: input_image
      shape: {input_shape}
  output_config:
    reconstruction:
      typename: Model
      name: decoder
      fetch: output
    error:
      typename: Model
      name: error
      fetch: output
  model_configs: &model_configs
    - << : *autoencoder
      name: autoencoder
    - << : *error
      name: error
